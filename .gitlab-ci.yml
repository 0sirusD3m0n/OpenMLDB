image: develop-registry.4pd.io/centos6_gcc7_build_env:0.4.0
services:
    - docker:dind
variables:
    GIT_SUBMODULE_STRATEGY: recursive
stages:
    - build
    - make_docker
    - test
    - ts_integration_test
    - ns_integration_test
    - deploy

build:
    stage: build
    script:
        - source /root/.bashrc && sh tools/install_fesql.sh
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - source /root/.bashrc && bash steps/simple_compile.sh
    artifacts:
        expire_in: 2h
        paths:
            - build/bin/rtidb

style_check:
    stage: build
    script:
        - source /root/.bashrc && bash tools/style_check.sh
    artifacts:
        reports:
            junit:
                - ./style.xml


java_ut:
  stage: test
  before_script:
      - mkdir /rambuild
      - mount -t tmpfs -o size=3G tmpfs /rambuild
  script:
      - ln -sf /depends/thirdparty thirdparty
      - ln -sf /depends/thirdsrc thirdsrc
      - source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/java_ut.sh
      - source /root/.bashrc && bash steps/auto_test.sh
  after_script:
      - tar czvf $CI_COMMIT_SHA  auto-test-rtidb/target/allure-results
      - bash steps/upload-nexus.sh $CI_COMMIT_SHA
      - curl -s "http://auto.4paradigm.com/job/rtidb-test-report/buildWithParameters?token=gitlab&pkg=$CI_COMMIT_SHA&buildname=$CI_PIPELINE_ID"-"$CI_JOB_ID"
      - bash steps/get-report-url.sh rtidb-test-report $CI_PIPELINE_ID"-"$CI_JOB_ID
  artifacts:
      reports:
          junit:
              - java/target/surefire-reports/junitreports/TEST-*.xml
              - java/target/surefire-reports/TEST-*.xml
              - java/target/failsafe-reports/junitreports/TEST-*.xml
              - java/target/failsafe-reports/TEST-*.xml
              - rtidb-auto-test/target/surefire-reports/junitreports/TEST-*.xml
              - rtidb-auto-test/target/surefire-reports/TEST-*.xml
              - rtidb-auto-test/target/failsafe-reports/junitreports/TEST-*.xml
              - rtidb-auto-test/target/failsafe-reports/TEST-*.xml
c++_ut:
  stage: test
  script:
      - source /root/.bashrc && sh tools/install_fesql.sh
      - ln -sf /depends/thirdparty thirdparty
      - ln -sf /depends/thirdsrc thirdsrc
      - source /root/.bashrc && bash steps/compile.sh
      - source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/ut.sh
  artifacts:
      reports:
          junit:
              - reports/*.xml

py3_ut:
  stage: test
  before_script:
    - mkdir /rambuild
    - mount -t tmpfs -o size=3G tmpfs /rambuild
  script:
    - ln -sf /depends/thirdparty thirdparty
    - ln -sf /depends/thirdsrc thirdsrc
    - source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/run_py3_ut.sh
  artifacts:
    reports:
      junit:
        - ./python/test/*xml


tablet_one_demension:
    stage: ts_integration_test
    before_script:
        - mkdir /rambuild
        - mount -t tmpfs -o size=3G tmpfs /rambuild
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - rm -rf ./test-output/integrationtest/test-reports/
        - sed -i 's/log_level\ =\ debug/log_level\ =\ info/g' test-common/integrationtest/conf/test.conf
        - source /root/.bashrc && source /opt/rh/python27/enable && sh steps/integration_test_on_ramdir.sh 0 "test" "ns_client"
    artifacts:
        reports:
            junit:
                - ./test-output/integrationtest/test-reports/*.xml

tablet_multi_demension:
    stage: ts_integration_test
    before_script:
        - mkdir /rambuild
        - mount -t tmpfs -o size=3G tmpfs /rambuild
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - rm -rf ./test-output/integrationtest/test-reports/
        - sed -i 's/log_level\ =\ debug/log_level\ =\ info/g' test-common/integrationtest/conf/test.conf
        - source /root/.bashrc && source /opt/rh/python27/enable && sh steps/integration_test_on_ramdir.sh 1 "test" "ns_client"
    artifacts:
        reports:
            junit:
                - ./test-output/integrationtest/test-reports/*.xml

ns_one_demension:
    stage: ns_integration_test
    before_script:
        - mkdir /rambuild
        - mount -t tmpfs -o size=3G tmpfs /rambuild
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - rm -rf ./test-output/integrationtest/test-reports/
        - sed -i 's/log_level\ =\ debug/log_level\ =\ info/g' test-common/integrationtest/conf/test.conf
        - source /root/.bashrc && source /opt/rh/python27/enable && sh steps/integration_test_on_ramdir.sh 0 "ns_client" "disk"
    artifacts:
        reports:
            junit:
                - ./test-output/integrationtest/test-reports/*.xml

ns_multi_demension:
    stage: ns_integration_test
    before_script:
        - mkdir /rambuild
        - mount -t tmpfs -o size=3G tmpfs /rambuild
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - rm -rf ./test-output/integrationtest/test-reports/
        - sed -i 's/log_level\ =\ debug/log_level\ =\ info/g' test-common/integrationtest/conf/test.conf
        - source /root/.bashrc && source /opt/rh/python27/enable && sh steps/integration_test_on_ramdir.sh 1 "ns_client" "disk"
    artifacts:
        reports:
            junit:
                - ./test-output/integrationtest/test-reports/*.xml

disk_table:
    stage: ns_integration_test
    before_script:
        - mkdir /rambuild
        - mount -t tmpfs -o size=3G tmpfs /rambuild
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - rm -rf ./test-output/integrationtest/test-reports/
        - sed -i 's/log_level\ =\ debug/log_level\ =\ info/g' test-common/integrationtest/conf/test.conf
        - source /root/.bashrc && source /opt/rh/python27/enable && sh steps/integration_test_on_ramdir.sh 0 "disk"
    artifacts:
        reports:
            junit:
                - ./test-output/integrationtest/test-reports/*.xml

deploy-package:
    stage: deploy
    script:
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - source /root/.bashrc && bash steps/deploy_package.sh
    only:
        - tags
docker-image:
    stage: make_docker
    script:
        - source /root/.bashrc && sh tools/install_fesql.sh
        - ln -sf /depends/thirdparty thirdparty
        - ln -sf /depends/thirdsrc thirdsrc
        - make blob_proxy
