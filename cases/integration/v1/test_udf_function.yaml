db: test_zw
debugs:
cases:
  - id: 0
    desc: concat两个字符串
    inputs:
      - columns: ["id int", "c1 string","c2 string","c7 timestamp"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1, "aa","bbb",1590738989000]
    sql: select id, c1, c2, concat(c1, c2) as c12 from {0};
    expect:
      columns: ["id int", "c1 string","c2 string", "c12 string"]
      rows:
        - [1, "aa", "bbb", "aabbb"]

  - id: 1
    desc: concat_ws两个字符串
    inputs:
      - columns: ["id int", "c1 string","c2 string","c7 timestamp"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1, "aa","bbb",1590738989000]
    sql: select id, c1, c2, concat_ws("-", c1, c2) as c1_2 from {0};
    expect:
      columns: ["id int", "c1 string","c2 string","c1_2 string"]
      rows:
        - [1, "aa", "bbb", "aa-bbb"]

  - id: 2
    desc: 默认udf null处理逻辑：返回null
    inputs:
      - columns: ["id int64", "c1 string", "c2 int", "c3 double",
                  "c4 date", "c5 timestamp", "std_ts timestamp"]
        indexs: ["index1:id:std_ts"]
        rows:
        - [1, NULL, 42, 3.14, 2020-05-20, 1590738989000, 1590738989000]
        - [2, "hello world", NULL, NULL, NULL, NULL, 1590738989000]
    sql: select id,
        substring(c1, 1, 5) as r1,
        substring(c1, 1, c2) as r2,
        pow(c2, 2) as r3,
        floor(c3) as r4,
        dayofweek(c4) as r5,
        dayofweek(c5) as r6
        from {0};
    expect:
      order: id
      columns: ["id int64", "r1 string", "r2 string", "r3 double", "r4 double",
                "r5 int", "r6 int"]
      rows:
        - [1, NULL, NULL, 1764, 3.00, 4, 6]
        - [2, "hello", NULL, NULL, NULL, NULL, NULL]

  - id: 3
    desc: udf使用中间结果null值
    inputs:
      - columns: ["id int64", "c1 string", "c2 int", "c3 double",
                  "c4 date", "c5 timestamp", "std_ts timestamp"]
        indexs: ["index1:id:std_ts"]
        rows:
        - [1, NULL, 42, 3.14, 2020-05-20, 1590738989000, 1590738989000]
        - [2, "hello world", NULL, NULL, NULL, NULL, 1590738989000]
    sql: select id,
        substring(substring(c1, 1, 5), 1, 1) as r1,
        substring(substring(c1, 1, c2), c2, 1) as r2,
        abs(pow(c2, 2)) as r3,
        abs(floor(c3)) as r4,
        abs(dayofweek(c4)) as r5,
        abs(dayofweek(c5)) as r6
        from {0};
    expect:
      order: id
      columns: ["id int64", "r1 string", "r2 string", "r3 double", "r4 double",
                "r5 int", "r6 int"]
      rows:
        - [1, NULL, NULL, 1764, 3.00, 4, 6]
        - [2, "h", NULL, NULL, NULL, NULL, NULL]

  - id: 4
    desc: strcmp 两个字符串
    inputs:
      - columns: ["id int", "c1 string","c2 string","c7 timestamp"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1, "text","text2",1590738989000]
          - [2, "text","text",1590738989000]
          - [3, "text2","text",1590738989000]
          - [4, null,"text",1590738989000]
          - [5, "text",null,1590738989000]
          - [6, null,null,1590738989000]
    sql: select id, c1, c2, strcmp(c1, c2) as cmp_c1c2 from {0};
    expect:
      columns: ["id int", "c1 string","c2 string","cmp_c1c2 int"]
      order: id
      rows:
        - [1, "text", "text2", -1]
        - [2, "text", "text", 0]
        - [3, "text2", "text", 1]
        - [4, null,"text",null]
        - [5, "text",null,null]
        - [6, null,null,null]

  - id: 5
    desc: 三角函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, 0, 1, 1, 1.0, 0.0]
          - [2, NULL, NULL, 1, NULL, NULL]
    sql: select id as id, 
        cos(c0) as r0, 
        cot(c1) as r1, 
        sin(c2) as r2, 
        tan(c3) as r3 from {0};
    expect:
      order: id
      columns: ["id int", "r0 double", "r1 double", "r2 double", "r3 float"]
      rows:
        - [1, 1, 0.6420926159343306, 0.8414709848078965, 1.5574077]
        - [2, NULL, NULL, 0.8414709848078965, NULL]

  - id: 6
    desc: 反三角函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, 1, 2, 2, 0.2, 0.5]
          - [2, NULL, NULL, 2, NULL, NULL]
    sql: select id as id, 
        acos(c4) as r0, 
        asin(c3) as r1, 
        atan(c1) as r2, 
        atan2(c1, c2) as r3 from {0};
    expect:
      order: id
      columns: ["id int", "r0 double", "r1 float", "r2 double", "r3 double"]
      rows:
        - [1, 1.0471975511965979, 0.2013579207903308, 1.1071487177940904, 0.78539816339744828]
        - [2, NULL, NULL, NULL, 0.000000]
  
  - id: 7
    desc: 对数函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, 1, 1, 3, 1, 1]
          - [2, NULL, NULL, 3, NULL, NULL]
    sql: select id as id, 
        log(c0) as r0, 
        log(c2, c1) as r1, 
        log2(c3) as r2, 
        log10(c4) as r3, 
        ln(c1) as r4 from {0};
    expect:
      order: id
      columns: ["id int", "r0 double", "r1 double", "r2 float", "r3 double", "r4 double"]
      rows:
        - [1, 0, 0, 0, 0, 0]
        - [2, NULL, NULL, NULL, NULL, NULL]

  - id: 8
    desc: 数值符号函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, -1, 2, 2, -0.2, -0.5]
          - [2, NULL, NULL, 2, NULL, NULL]
    sql: select id as id,
         abs(c0) as r0,
          abs(c1) as r1,
           abs(c2) as r2,
            abs(c3) as r3,
             abs(c4) as r4 from {0};
    expect:
      order: id
      columns: ["id int", "r0 int", "r1 int", "r2 bigint", "r3 double", "r4 double"]
      rows:
        - [1, 1, 2, 2, 0.20000000298023224, 0.5]
        - [2, NULL, NULL, 2, NULL , NULL]

  - id: 9
    desc: 数值位数函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, 1, 2, 2, 0.5, 0.7]
          - [2, NULL, NULL, 2, NULL, NULL]
    sql: select id as id,
         ceil(c0) as r0, 
         ceiling(c1) as r1, 
         floor(c2) as r2, 
         round(c3) as r3, 
         truncate(c4) as r4 from {0};
    expect:
      order: id
      columns: ["id int", "r0 bigint", "r1 bigint", "r2 bigint", "r3 double", "r4 double"]
      rows:
        - [1, 1, 2, 2, 1.000000, 0.000000]
        - [2, NULL, NULL, 2, NULL, NULL]

  - id: 10
    desc: 数值幂函数
    inputs:
      - columns: ["id int", "c0 smallint", "c1 int", "c2 bigint", "c3 float", "c4 double"]
        indexs: ["index1:c0:c2"]
        rows:
          - [1, 0, 2, 10, 1, 100]
          - [2, NULL, NULL, 10, NULL, NULL]
    sql: select id as id,
        exp(c0) as r0,
        pow(c1, c2) as r1,
        power(c2, c3) as r2,
        sqrt(c4) as r3
        from {0};
    expect:
      order: id
      columns: ["id int", "r0 double", "r1 double", "r2 double", "r3 double"]
      rows:
        - [1, 1, 1024.000000, 10.000000, 10.000000]  
        - [2, NULL, NULL, NULL, NULL]  
        
