db: test_zw
debugs: []
cases:
  - id: 0
    desc: batch request without common column
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date","c9 string"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"a",1,30,1.0,2.0,1590738990000,"2020-05-01","a"]
          - [3,"a",3,32,1.2,2.2,1590738992000,"2020-05-03","c"]
          - [5,"a",5,34,1.4,2.4,1590738994000,"2020-05-05","d"]
          - [6,"a",6,35,1.5,2.5,1590738995000,"2020-05-06","e"]          
      -
        name: batch_request
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date","c9 string"]
        indexs: ["index1:c1:c7"]
        rows:
          - [2,"a",2,31,1.1,2.1,1590738991000,"2020-05-02","b"]
          - [4,"a",4,33,1.3,2.3,1590738993000,"2020-05-04","c"]
          - [7,"a",6,36,1.6,2.6,1590738996000,"2020-05-07","f"]
    sql: |
      SELECT id, c1, sum(c3) OVER w1 as m3, sum(c4) OVER w1 as m4, sum(c5) OVER w1 as m5,
            sum(c6) OVER w1 as m6, max(c7) OVER w1 as m7, max(c8) OVER w1 as m8, min(c9) OVER w1 as m9 FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","m3 int","m4 bigint","m5 float","m6 double","m7 timestamp","m8 date","m9 string"]
      rows:
        - [2,"a",3,61,2.1,4.1,1590738991000,"2020-05-02","a"]
        - [4,"a",8,95,3.5,6.5,1590738993000,"2020-05-04","a"]
        - [7,"a",17,105,4.5,7.5,1590738996000,"2020-05-07","d"]

  - id: 1
    desc: batch request with all common columns
    common_column_indices: [0,1,2,3,4,5,6,7,8]
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date","c9 string"]
        indexs: ["index1:c1:c7"]
        rows:
          - [1,"a",1,30,1.0,2.0,1590738990000,"2020-05-01","a"]
          - [3,"a",3,32,1.2,2.2,1590738992000,"2020-05-03","c"]
          - [5,"a",5,34,1.4,2.4,1590738994000,"2020-05-05","d"]
          - [6,"a",6,35,1.5,2.5,1590738995000,"2020-05-06","e"]          
      -
        name: batch_request
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp","c8 date","c9 string"]
        indexs: ["index1:c1:c7"]
        rows:
          - [2,"a",2,31,1.1,2.1,1590738991000,"2020-05-02","b"]
          - [2,"a",2,31,1.1,2.1,1590738991000,"2020-05-02","b"]
          - [2,"a",2,31,1.1,2.1,1590738991000,"2020-05-02","b"]
    sql: |
      SELECT id, c1, sum(c3) OVER w1 as m3, sum(c4) OVER w1 as m4, sum(c5) OVER w1 as m5,
            sum(c6) OVER w1 as m6, max(c7) OVER w1 as m7, max(c8) OVER w1 as m8, min(c9) OVER w1 as m9 FROM {0} WINDOW
      w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","m3 int","m4 bigint","m5 float","m6 double","m7 timestamp","m8 date","m9 string"]
      rows:
        - [2,"a",3,61,2.1,4.1,1590738991000,"2020-05-02","a"]
        - [2,"a",3,61,2.1,4.1,1590738991000,"2020-05-02","a"]
        - [2,"a",3,61,2.1,4.1,1590738991000,"2020-05-02","a"]

  - id: 2
    desc: batch request with non-trival common columns
    common_column_indices: [1,3,5,7]
    inputs:
      -
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp"]
        indexs: ["index1:c1:c7", "index2:id:c7"]
        rows:
          - [1,"a",1,30,1.0,2.0,1590738990000]
          - [3,"a",3,32,1.2,2.2,1590738992000]
          - [5,"a",5,34,1.4,2.4,1590738994000]
          - [6,"a",6,35,1.5,2.5,1590738995000]
      -
        name: t2
        columns : ["id int","timecol timestamp","c8 date","c9 string"]
        indexs: ["index2:id:timecol"]
        rows:
          - [1,1590738990000,"2020-05-01","a"]
          - [2,1590738991000,"2020-05-02","b"]
          - [3,1590738992000,"2020-05-03","c"]
          - [4,1590738993000,"2020-05-04","d"]
          - [5,1590738994000,"2020-05-05","e"]
          - [6,1590738995000,"2020-05-06","f"] 
          - [7,1590738996000,"2020-05-07","g"]
      -
        name: batch_request
        indexs: ["index1:c1:c7"]
        columns : ["id int","c1 string","c3 int","c4 bigint","c5 float","c6 double","c7 timestamp"]
        rows:
          - [2,"a",2,31,1.1,2.1,1590738991000]
          - [4,"a",3,31,1.2,2.1,1590738993000]
          - [7,"a",4,31,1.3,2.1,1590738996000]
    sql: |
      SELECT {0}.id, c1, sum(c3) OVER w1 as m3, sum(c4) OVER w1 as m4, sum(c5) OVER w1 as m5,
            sum(c6) OVER w1 as m6, max(c7) OVER w1 as m7, max(c8) OVER w1 as m8, min(c9) OVER w1 as m9 
      FROM {0} last join t2 order by t2.timecol on {0}.id=t2.id and {0}.c7=t2.timecol
      WINDOW w1 AS (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW);
    expect:
      order: id
      columns: ["id int","c1 string","m3 int","m4 bigint","m5 float","m6 double","m7 timestamp","m8 date","m9 string"]
      rows:
        - [2,"a",3,61,2.1,4.1,1590738991000,"2020-05-02","a"]
        - [4,"a",7,93,3.4,6.3,1590738993000,"2020-05-04","a"]
        - [7,"a",15,100,4.2,7.0,1590738996000,"2020-05-07","e"]
