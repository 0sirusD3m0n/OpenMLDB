db: test_zw
debugs: []
cases:
  -
    id: 0
    desc: 简单拼表
    inputs:
      -
        columns : ["id int", "card_no string","merchant_id int", "trx_time timestamp", "trx_amt float"]

        indexs: ["index1:card_no:trx_time"]
        rows:
          - [1, "aaaaaaaaaa",1, 1590738989000, 1.1]
          - [2, "aaaaaaaaaa",1, 1590738990000, 2.2]
          - [3, "bb",2, 1590738990000, 3.3]
          - [4, "cc",3, 1590738990000, 4.0]
          - [5, "cc",3, 1590738991000, 5.0]
          - [6, "cc",3, 1590738992000, 6.0]
          - [7, "cc",2, 1590738993000, 7.0]
      -
        columns : ["crd_lst_isu_dte timestamp", "merchant_nbr int"]
        indexs: ["index2:merchant_nbr:crd_lst_isu_dte"]
        rows:
          - [1590738988000, 1]
          - [1590738990000, 1]
          - [1590738991000, 2]
          - [1590738989000, 3]
          - [1590738992000, 3]
    sql: |
      select id, card_no, merchant_id, trx_time, crd_lst_isu_dte, merchant_nbr from {0}
      last join {1} order by {1}.crd_lst_isu_dte on {0}.merchant_id = {1}.merchant_nbr and {0}.trx_time >= {1}.crd_lst_isu_dte;
    expect:
      columns: ["id int", "card_no string", "merchant_id int", "trx_time timestamp",
                "crd_lst_isu_dte timestamp", "merchant_nbr int"]
      order: id
      rows:
        - [1, "aaaaaaaaaa", 1, 1590738989000, 1590738988000, 1]
        - [2, "aaaaaaaaaa", 1, 1590738990000, 1590738990000, 1]
        - [3, "bb", 2, 1590738990000, null, null]
        - [4, "cc", 3, 1590738990000, 1590738989000, 3]
        - [5, "cc", 3, 1590738991000, 1590738989000, 3]
        - [6, "cc", 3, 1590738992000, 1590738992000, 3]
        - [7, "cc", 2, 1590738993000, 1590738991000, 2]
  -
    id: 1
    desc: 三表拼表
    inputs:
      -
        columns : ["id int", "card_no string","merchant_id int", "user string", "trx_time timestamp", "trx_amt float"]

        indexs: ["index1:card_no:trx_time"]
        rows:
          - [1, "aaaaaaaaaa",1, "user1", 1590738989000, 1.1]
          - [2, "aaaaaaaaaa",1, "user2", 1590738990000, 2.2]
          - [3, "bb",2, "user3", 1590738990000, 3.3]
          - [4, "cc",3, "user4", 1590738990000, 4.0]
          - [5, "cc",3, "user5", 1590738991000, 5.0]
          - [6, "cc",3, "user6", 1590738992000, 6.0]
          - [7, "cc",2, "user7", 1590738993000, 7.0]
      -
        columns : ["crd_lst_isu_dte timestamp", "merchant_nbr int"]
        indexs: ["index2:merchant_nbr:crd_lst_isu_dte"]
        rows:
          - [1590738988000, 1]
          - [1590738990000, 1]
          - [1590738991000, 2]
          - [1590738989000, 3]
          - [1590738992000, 3]
      - columns: [ "std_ts timestamp", "username string" ]
        indexs: [ "index2:username:std_ts" ]
        rows:
          - [ 1590738988000, "user1"]
          - [ 1590738990000, "user1"]
          - [ 1590738991000, "user2"]
          - [ 1590738989000, "user2"]
          - [ 1590738992000, "user3" ]
    sql: |
      select id, card_no, merchant_id, user, trx_time, crd_lst_isu_dte, merchant_nbr, std_ts, username from {0}
      last join {1} order by {1}.crd_lst_isu_dte on {0}.merchant_id = {1}.merchant_nbr and {0}.trx_time >= {1}.crd_lst_isu_dte
      last join {2} order by {2}.std_ts on {0}.user = {2}.username;
    expect:
      columns: ["id int", "card_no string", "merchant_id int", "user string", "trx_time timestamp",
                "crd_lst_isu_dte timestamp", "merchant_nbr int", "std_ts timestamp", "username string"]
      order: id
      rows:
        - [1, "aaaaaaaaaa", 1, "user1", 1590738989000, 1590738988000, 1, 1590738990000, "user1"]
        - [2, "aaaaaaaaaa", 1, "user2", 1590738990000, 1590738990000, 1, 1590738991000, "user2"]
        - [3, "bb", 2, "user3", 1590738990000, null, null, 1590738992000, "user3", ]
        - [4, "cc", 3, "user4", 1590738990000, 1590738989000, 3, null, null]
        - [5, "cc", 3, "user5", 1590738991000, 1590738989000, 3, null, null]
        - [6, "cc", 3, "user6", 1590738992000, 1590738992000, 3, null, null]
        - [7, "cc", 2, "user7", 1590738993000, 1590738991000, 2, null, null]
  -
    id: 2
    desc: 三表拼表2
    inputs:
      -
        columns : ["id int", "card_no string","merchant_id int", "user string", "trx_time timestamp", "trx_amt float"]

        indexs: ["index1:card_no:trx_time"]
        rows:
          - [1, "aaaaaaaaaa",1, "user1", 1590738989000, 1.1]
          - [2, "aaaaaaaaaa",1, "user2", 1590738990000, 2.2]
          - [3, "bb",2, "user3", 1590738990000, 3.3]
          - [4, "cc",3, "user4", 1590738990000, 4.0]
          - [5, "cc",3, "user5", 1590738991000, 5.0]
          - [6, "cc",3, "user6", 1590738992000, 6.0]
          - [7, "cc",2, "user7", 1590738993000, 7.0]
      -
        columns : ["crd_lst_isu_dte timestamp", "merchant_nbr int", "product_nbr bigint"]
        indexs: ["index2:merchant_nbr:crd_lst_isu_dte"]
        rows:
          - [1590738988000, 1, 1001]
          - [1590738990000, 1, 1002]
          - [1590738991000, 2, 1003]
          - [1590738989000, 3, 1004]
          - [1590738992000, 3, 1005]
      - columns: [ "std_ts timestamp", "product_id bigint" ]
        indexs: [ "index2:product_id:std_ts" ]
        rows:
          - [ 1590738988000, 1001]
          - [ 1590738990000, 1001]
          - [ 1590738991000, 1001]
          - [ 1590738989000, 1002]
          - [ 1590738992000, 1002]
          - [ 1590738993000, 1005]
    sql: |
      select id, card_no, merchant_id, user, trx_time, crd_lst_isu_dte, merchant_nbr, product_nbr, std_ts, product_id from {0}
      last join {1} order by {1}.crd_lst_isu_dte on {0}.merchant_id = {1}.merchant_nbr and {0}.trx_time >= {1}.crd_lst_isu_dte
      last join {2} order by {2}.std_ts on {1}.product_nbr = {2}.product_id;
    expect:
      columns: ["id int", "card_no string", "merchant_id int", "user string", "trx_time timestamp",
                "crd_lst_isu_dte timestamp", "merchant_nbr int", "product_nbr bigint", "std_ts timestamp", "product_id bigint"]
      order: id
      rows:
        - [1, "aaaaaaaaaa", 1, "user1", 1590738989000, 1590738988000, 1, 1001, 1590738991000, 1001]
        - [2, "aaaaaaaaaa", 1, "user2", 1590738990000, 1590738990000, 1, 1002, 1590738992000, 1002]
        - [3, "bb", 2, "user3", 1590738990000, null, null, null,  null, null]
        - [4, "cc", 3, "user4", 1590738990000, 1590738989000, 3, 1004, null, null]
        - [5, "cc", 3, "user5", 1590738991000, 1590738989000, 3, 1004, null, null]
        - [6, "cc", 3, "user6", 1590738992000, 1590738992000, 3, 1005, 1590738993000, 1005]
        - [7, "cc", 2, "user7", 1590738993000, 1590738991000, 2, 1003, null, null]
  -
    id: 3
    desc: 窗口特征拼接副表
    inputs:
      -
        columns : ["id int", "card_no string","merchant_id int", "trx_time timestamp", "trx_amt float"]

        indexs: ["index1:card_no:trx_time"]
        rows:
          - [1, "aaaaaaaaaa",1, 1590738989000, 1.1]
          - [2, "aaaaaaaaaa",1, 1590738990000, 2.2]
          - [3, "bb",2, 1590738990000, 3.3]
          - [4, "cc",3, 1590738990000, 4.0]
          - [5, "cc",3, 1590738991000, 5.0]
          - [6, "cc",3, 1590738992000, 6.0]
          - [7, "cc",2, 1590738993000, 7.0]
      -
        columns : ["crd_lst_isu_dte timestamp", "merchant_nbr int"]
        indexs: ["index2:merchant_nbr:crd_lst_isu_dte"]
        rows:
          - [1590738988000, 1]
          - [1590738990000, 1]
          - [1590738991000, 2]
          - [1590738989000, 3]
          - [1590738992000, 3]
    sql: select * from
      (select
      id,
      card_no,
      merchant_id,
      trx_time,
      sum(trx_amt) over w30d,
      count(merchant_id) over w10d
      from  {0}
      window w30d as (PARTITION BY {0}.card_no ORDER BY {0}.trx_time ROWS_RANGE BETWEEN 30d PRECEDING AND CURRENT ROW),
      w10d as (PARTITION BY {0}.card_no ORDER BY {0}.trx_time ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)) as trx_fe
      last join {1} order by {1}.crd_lst_isu_dte on trx_fe.merchant_id = {1}.merchant_nbr and trx_fe.trx_time >= {1}.crd_lst_isu_dte;
    expect:
      columns: ["id int", "card_no string", "merchant_id int", "trx_time timestamp",
                "sum(trx_amt)over w30d float", "count(merchant_id)over w10d int64", "crd_lst_isu_dte timestamp",
                "merchant_nbr int"]
      order: id
      rows:
        - [1, "aaaaaaaaaa", 1, 1590738989000, 1.1, 1, 1590738988000, 1]
        - [2, "aaaaaaaaaa", 1, 1590738990000, 3.3, 2, 1590738990000, 1]
        - [3, "bb", 2, 1590738990000, 3.3, 1, null, null]
        - [4, "cc", 3, 1590738990000, 4.0, 1, 1590738989000, 3]
        - [5, "cc", 3, 1590738991000, 9.0, 2, 1590738989000, 3]
        - [6, "cc", 3, 1590738992000, 15.0, 3, 1590738992000, 3]
        - [7, "cc", 2, 1590738993000, 22.0, 4, 1590738991000, 2]
  -
    id: 4
    desc: 3组窗口特征ID拼接
    mode: rtidb-batch-unsupport
    inputs:
      -
        columns : ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7", "index2:c2:c7", "index3:c3:c7", "index4:c4:c7"]
        rows:
          - [ 1, "a", "aa", "aaa", "aaaa", "1.0", 1590738990000]
          - [ 2, "a", "aa", "aaa", "aaaa", "1.0", 1590738991000]
          - [ 3, "a", "aa", "aaa", "bbbb", "1.0", 1590738992000]
          - [ 4, "a", "aa", "aaa", "bbbb", "1.0", 1590738993000]
          - [ 5, "a", "aa", "bbb", "bbbb", "1.0", 1590738994000]
          - [ 6, "a", "aa", "bbb", "bbbb", "1.0", 1590738995000]
          - [ 7, "a", "bb", "bbb", "bbbb", "1.0", 1590738996000 ]
          - [ 8, "a", "bb", "bbb", "bbbb", "1.0", 1590738997000 ]
          - [ 9, "b", "bb", "bbb", "bbbb", "1.0", 1590739998000 ]
          - [10, "b", "bb", "bbb", "bbbb", "1.0", 1590739999000 ]
    sql: |
      select * from
      (
        select id as out1_id, c1, c6 from {0}
      ) as out1 last join
      (
        select id as out2_id, c2, sum(c6) over w2 as w2_sum_c6 from {0}
        window w2 as (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out2 on out1_id=out2_id last join
      (
        select id as out3_id, c3, sum(c6) over w3 as w3_sum_c6 from {0}
        window w3 as (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out3 on out1_id=out3_id last join
      (
        select id as out4_id, c4, sum(c6) over w4 as w4_sum_c6 from {0}
        window w4 as (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out4 on out1_id=out4_id;
    expect:
      columns: ["out1_id int", "c1 string", "c6 double",
                "out2_id int", "c2 string", "w2_sum_c6 double",
                "out3_id int", "c3 string", "w3_sum_c6 double",
                "out4_id int", "c4 string", "w4_sum_c6 double",]
      order: id
      rows:
        - [ 1, "a", 1.0, 1, "aa", 1.0, 1, "aaa", 1.0, 1, "aaaa", 1.0]
        - [ 2, "a", 1.0, 2, "aa", 2.0, 2, "aaa", 2.0, 2, "aaaa", 2.0]
        - [ 3, "a", 1.0, 3, "aa", 3.0, 3, "aaa", 3.0, 3, "bbbb", 1.0]
        - [ 4, "a", 1.0, 4, "aa", 4.0, 4, "aaa", 4.0, 4, "bbbb", 2.0]
        - [ 5, "a", 1.0, 5, "aa", 5.0, 5, "bbb", 1.0, 5, "bbbb", 3.0]
        - [ 6, "a", 1.0, 6, "aa", 6.0, 6, "bbb", 2.0, 6, "bbbb", 4.0]
        - [ 7, "a", 1.0, 7, "bb", 1.0, 7, "bbb", 3.0, 7, "bbbb", 5.0]
        - [ 8, "a", 1.0, 8, "bb", 2.0, 8, "bbb", 4.0, 8, "bbbb", 6.0]
        - [ 9, "b", 1.0, 9, "bb", 3.0, 9, "bbb", 5.0, 9, "bbbb", 7.0]
        - [10, "b", 1.0, 10, "bb", 4.0, 10, "bbb", 6.0, 10, "bbbb", 8.0]
  -
    id: 5
    desc: 4组窗口特征ID拼接
    mode: rtidb-batch-unsupport
    inputs:
      -
        columns : ["id int", "c1 string", "c2 string", "c3 string", "c4 string", "c6 double", "c7 timestamp"]
        indexs: ["index1:c1:c7", "index2:c2:c7", "index3:c3:c7", "index4:c4:c7"]
        rows:
          - [ 1, "a", "aa", "aaa", "aaaa", "1.0", 1590738990000]
          - [ 2, "a", "aa", "aaa", "aaaa", "1.0", 1590738991000]
          - [ 3, "a", "aa", "aaa", "bbbb", "1.0", 1590738992000]
          - [ 4, "a", "aa", "aaa", "bbbb", "1.0", 1590738993000]
          - [ 5, "a", "aa", "bbb", "bbbb", "1.0", 1590738994000]
          - [ 6, "a", "aa", "bbb", "bbbb", "1.0", 1590738995000]
          - [ 7, "a", "bb", "bbb", "bbbb", "1.0", 1590738996000 ]
          - [ 8, "a", "bb", "bbb", "bbbb", "1.0", 1590738997000 ]
          - [ 9, "b", "bb", "bbb", "bbbb", "1.0", 1590739998000 ]
          - [10, "b", "bb", "bbb", "bbbb", "1.0", 1590739999000 ]
    sql: |
      select * from
      (
        select id as out1_id, c1, sum(c6) over w1 as w1_sum_c6 from {0}
        window w1 as (PARTITION BY {0}.c1 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out1 last join
      (
        select id as out2_id, c2, sum(c6) over w2 as w2_sum_c6 from {0}
        window w2 as (PARTITION BY {0}.c2 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out2 on out1_id=out2_id last join
      (
        select id as out3_id, c3, sum(c6) over w3 as w3_sum_c6 from {0}
        window w3 as (PARTITION BY {0}.c3 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out3 on out1_id=out3_id last join
      (
        select id as out4_id, c4, sum(c6) over w4 as w4_sum_c6 from {0}
        window w4 as (PARTITION BY {0}.c4 ORDER BY {0}.c7 ROWS_RANGE BETWEEN 10d PRECEDING AND CURRENT ROW)
      ) as out4 on out1_id=out4_id;
    expect:
      columns: ["out1_id int", "c1 string", "w1_sum_c6 double",
                "out2_id int", "c2 string", "w2_sum_c6 double",
                "out3_id int", "c3 string", "w3_sum_c6 double",
                "out4_id int", "c4 string", "w4_sum_c6 double",]
      order: id
      rows:
        - [ 1, "a", 1.0, 1, "aa", 1.0, 1, "aaa", 1.0, 1, "aaaa", 1.0]
        - [ 2, "a", 2.0, 2, "aa", 2.0, 2, "aaa", 2.0, 2, "aaaa", 2.0]
        - [ 3, "a", 3.0, 3, "aa", 3.0, 3, "aaa", 3.0, 3, "bbbb", 1.0]
        - [ 4, "a", 4.0, 4, "aa", 4.0, 4, "aaa", 4.0, 4, "bbbb", 2.0]
        - [ 5, "a", 5.0, 5, "aa", 5.0, 5, "bbb", 1.0, 5, "bbbb", 3.0]
        - [ 6, "a", 6.0, 6, "aa", 6.0, 6, "bbb", 2.0, 6, "bbbb", 4.0]
        - [ 7, "a", 7.0, 7, "bb", 1.0, 7, "bbb", 3.0, 7, "bbbb", 5.0]
        - [ 8, "a", 8.0, 8, "bb", 2.0, 8, "bbb", 4.0, 8, "bbbb", 6.0]
        - [ 9, "b", 1.0, 9, "bb", 3.0, 9, "bbb", 5.0, 9, "bbbb", 7.0]
        - [10, "b", 2.0, 10, "bb", 4.0, 10, "bbb", 6.0, 10, "bbbb", 8.0]