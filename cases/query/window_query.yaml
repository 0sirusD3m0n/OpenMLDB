SQLCases:
  - id: 1
    desc: Window SQL
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col1 as id, col2, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: id:int32, col2:int16, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col6:string
      order: id
      data: |
        1, 5, 1, 1, 1.1, 11.1, 5, 1, 1
        2, 5, 2, 3, 3.3, 33.3, 10, 3, 22
        3, 55, 1, 3, 3.3, 33.3, 55, 1, 333
        4, 55, 2, 7, 7.7, 77.7, 110, 3, 4444
        5, 55, 3, 12, 13.2, 133.2, 165, 6, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 2
    desc: Window SQL PK是字符串
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col1 as id, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col0 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: id:int32, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col6:string
      order: id
      data: |
        1, 0, 1, 1, 1.1, 11.1, 5, 1, 1
        2, 0, 2, 3, 3.3, 33.3, 10, 3, 22
        3, 1, 1, 3, 3.3, 33.3, 55, 1, 333
        4, 1, 2, 7, 7.7, 77.7, 110, 3, 4444
        5, 2, 3, 5, 5.5, 55.5, 55, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 3
    desc: 单行+两window+自定义聚合函数,w1命中索引
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col1 as id, col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: id:int32, col2:int16, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w2_col4_sum:double, w2_col2_sum:int16, w2_col5_sum:int64, col6:string
      order: id
      data: |
        1, 5, 0, 1, 1, 1.1, 11.1, 5, 1, 1
        2, 5, 0, 2, 3, 3.3, 33.3, 10, 3, 22
        3, 55, 1, 1, 3, 3.3, 33.3, 55, 1, 333
        4, 55, 1, 2, 7, 7.7, 77.7, 110, 3, 4444
        5, 55, 2, 3, 12, 13.2, 55.5, 55, 3, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 4
    desc: 单行+两window+自定义聚合函数，w1和w2命中索引
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5,index0:col0:col5
    output:
      schema: col2:int16, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w2_col4_sum:double, w2_col2_sum:int16, w2_col5_sum:int64, col1:int32, col6:string
      order: col1
      data: |
        5, 0, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        5, 0, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        55, 1, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        55, 1, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        55, 2, 3, 12, 13.2, 55.5, 55, 3, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 5
    desc: 单行+三个window+自定义聚合函数,w1和w2命中索引
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w3 as w3_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW),
      w3 AS (PARTITION BY col1 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5,index0:col0:col5
    output:
      schema: col2:int16, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w3_col4_sum:double, w2_col2_sum:int16, w2_col5_sum:int64, col1:int32, col6:string
      order: col1
      data: |
        5, 0, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        5, 0, 2, 3, 3.3, 22.2, 10, 3, 2, 22
        55, 1, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        55, 1, 2, 7, 7.7, 44.4, 110, 3, 4, 4444
        55, 2, 3, 12, 13.2, 55.5, 55, 3, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 6
    desc: Window SQL 双PK 均命中索引
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col0, col2, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col0, t1.col2 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col0|col2:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 1, aaaaa
          2, 6, 55, 6.6, 66.6, 2, bbbbbb
          2, 7, 555, 7.7, 77.7, 3, ccccccc
          2, 8, 555, 8.8, 88.8, 4, dddddddd
          2, 9, 555, 9.9, 99.9, 5, eeeeeeeee
    output:
      schema: col0:string, col2:int16, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col1:int32, col6:string
      order: col1
      data: |
        0, 5, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        0, 5, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        1, 55, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        1, 55, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        2, 55, 1, 5, 5.5, 55.5, 55, 1, 5, aaaaa
        2, 55, 2, 11, 12.1, 122.1, 110, 3, 6, bbbbbb
        2, 555, 3, 7, 7.7, 77.7, 555, 3, 7, ccccccc
        2, 555, 4, 15, 16.5, 166.5, 1110, 7,  8, dddddddd
        2, 555, 5, 24, 26.4, 266.4, 1665, 12, 9, eeeeeeeee
  - id: 7
    desc: Window SQL 双PK col2未命中索引
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col0, col2, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col0, t1.col2 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        schema: col0:string, col1:int32, col2:int16, col3:float, col4:double, col5:int64, col6:string
        index: index2:col0:col5
        data: |
          0, 1, 5, 1.1, 11.1, 1, 1
          0, 2, 5, 2.2, 22.2, 2, 22
          1, 3, 55, 3.3, 33.3, 1, 333
          1, 4, 55, 4.4, 44.4, 2, 4444
          2, 5, 55, 5.5, 55.5, 1, aaaaa
          2, 6, 55, 6.6, 66.6, 2, bbbbbb
          2, 7, 555, 7.7, 77.7, 3, ccccccc
          2, 8, 555, 8.8, 88.8, 4, dddddddd
          2, 9, 555, 9.9, 99.9, 5, eeeeeeeee
    output:
      schema: col0:string, col2:int16, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col1:int32, col6:string
      order: col1
      data: |
        0, 5, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        0, 5, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        1, 55, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        1, 55, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        2, 55, 1, 5, 5.5, 55.5, 55, 1, 5, aaaaa
        2, 55, 2, 11, 12.1, 122.1, 110, 3, 6, bbbbbb
        2, 555, 3, 7, 7.7, 77.7, 555, 3, 7, ccccccc
        2, 555, 4, 15, 16.5, 166.5, 1110, 7,  8, dddddddd
        2, 555, 5, 24, 26.4, 266.4, 1665, 12, 9, eeeeeeeee
  - id: 7
    desc: Window SQL Order By Timestamp
    db: db1
    sql: |
      SELECT col1 as id, col2, std_ts, sum(col3) OVER w1 as w1_col3_sum FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.std_ts ROWS BETWEEN 3s PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1_ts.yaml
        index: index2:col2:std_ts
    output:
      schema: id:int32, col2:int16, std_ts:timestamp, w1_col3_sum:float
      order: id
      data: |
        1, 5, 1590115420000, 1.1
        2, 5, 1590115421000, 3.3
        3, 55, 1590115422000, 3.3
        4, 55, 1590115423000, 7.7
        5, 55, 1590115424000, 13.2
  - id: 8
    desc: Window SQL Order By Timestamp, timestamp列聚合
    db: db1
    sql: |
      SELECT col1 as id, col2, std_ts, sum(std_ts) OVER w1 as w1_col5_sum FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.std_ts ROWS BETWEEN 3s PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1_ts.yaml
        index: index2:col2:std_ts
    output:
      schema: id:int32, col2:int16, std_ts:timestamp, w1_col5_sum:timestamp
      order: id
      data: |
        1, 5, 1590115420000, 1590115420000
        2, 5, 1590115421000, 3180230841000
        3, 55, 1590115422000, 1590115422000
        4, 55, 1590115423000, 3180230845000
        5, 55, 1590115424000, 4770346269000
