SQLCases:
  - id: 1
    desc: Window SQL
    mode: request
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col2 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: col2:int16, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col1:int32, col6:string

      data: |
        5, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        5, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        55, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        55, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        55, 3, 12, 13.2, 133.2, 165, 6, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 2
    desc: Window SQL PK是字符串
    mode: request
    db: db1
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w1 as w1_col4_sum, sum(col2) OVER w1 as w1_col2_sum,
      sum(col5) OVER w1 as w1_col5_sum, col1,
      col6 as col6 FROM t1
      WINDOW w1 AS (PARTITION BY t1.col0 ORDER BY t1.col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w1_col4_sum:double, w1_col2_sum:int16, w1_col5_sum:int64, col1:int32, col6:string

      data: |
        0, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        0, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        1, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        1, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        2, 3, 5, 5.5, 55.5, 55, 3, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 3
    desc: 单行+两window+自定义聚合函数,w1命中索引
    mode: request
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5
    output:
      schema: col2:int16, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w2_col4_sum:double, w2_col2_sum:int16, w2_col5_sum:int64, col1:int32, col6:string
      data: |
        5, 0, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        5, 0, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        55, 1, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        55, 1, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        55, 2, 3, 12, 13.2, 55.5, 55, 3, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  - id: 4
    desc: 单行+两window+自定义聚合函数，两个窗口均命中索引
    mode: request
    sql: |
      %%fun
      def test_sum(col:list<int>):int
          result = 0
          for x in col
              result += x
          return result
      end
      %%sql
      SELECT col2, col0, col5, test_sum(col1) OVER w1 as w1_col1_sum, sum(col3) OVER w1 as w1_col3_sum,
      sum(col4) OVER w2 as w2_col4_sum, sum(col2) OVER w2 as w2_col2_sum, sum(col5) OVER w2 as w2_col5_sum,
      col1, col6 as col6 FROM t1 WINDOW
      w1 AS (PARTITION BY col2 ORDER BY col5 ROWS BETWEEN 3 PRECEDING AND CURRENT ROW),
      w2 AS (PARTITION BY col0 ORDER BY col5 RANGE BETWEEN 3 PRECEDING AND CURRENT ROW) limit 10;
    inputs:
      - name: t1
        resource: cases/resource/simple_t1.yaml
        index: index2:col2:col5,index0:col0:col5
    output:
      schema: col2:int16, col0:string, col5:int64, w1_col1_sum:int32, w1_col3_sum:float, w2_col4_sum:double, w2_col2_sum:int16, w2_col5_sum:int64, col1:int32, col6:string
      data: |
        5, 0, 1, 1, 1.1, 11.1, 5, 1, 1, 1
        5, 0, 2, 3, 3.3, 33.3, 10, 3, 2, 22
        55, 1, 1, 3, 3.3, 33.3, 55, 1, 3, 333
        55, 1, 2, 7, 7.7, 77.7, 110, 3, 4, 4444
        55, 2, 3, 12, 13.2, 55.5, 55, 3, 5, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
