apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tablet
  namespace: {{.namespace}}
  labels:
    rtidb: tablet  # deployment 标签
spec:
  replicas: 3  # 3 副本实例
  selector: # replicas 匹配的 pod 标签
    matchLabels:
      rtidb: tablet  # rtidb 标签
  template:
    metadata:
      labels: # pod 标签
        rtidb: tablet  # rtidb 标签
    spec:
      hostNetwork: true # hostNetwork
      containers:
      - env:
        - name: zk_cluster
          value: {{.zk_cluster}}
        - name: zk_root_path
          value: "/rtidb"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: {{.registry}}/tablet:v3.1.0
        name: rtidb
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /root/db/
          name: db
        - mountPath: /root/recycle/
          name: recycle
      imagePullSecrets:
      - name: docker-secret
      securityContext: {}
      volumes:
      - name: db  # hostPath volume
        hostPath:
          path: /data/rtidb/db
          type: DirectoryOrCreate # 不存在时创建，有可能需要 root 权限。
      - name: recycle  # hostPath volume
        hostPath:
          path: /data/rtidb/recycle
          type: DirectoryOrCreate # 不存在时创建，有可能需要 root 权限。
      affinity:
        nodeAffinity: # node 亲和性，只调度到有 run-rtidb=true 标签的节点
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: rtidb-tablet
                operator: In
                values:
                - "true"
        podAntiAffinity: # pod 互斥性，阻止具有 rtidb=tablet 的 Pod 调度到同一个节点
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rtidb
                operator: In
                values:
                - tablet
            topologyKey: "kubernetes.io/hostname"
      securityContext: # root 账户运行
        runAsUser: 0
