name: HybridSE CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_hybridsql:stable

    steps:
    - uses: actions/checkout@v1

    - name: Fetch Submodules
      run: |
        git submodule update --init --recursive

    - name: Build Core
      run: |
        ./tools/hybridse_build.sh

    - name: Core Test
      run: |
        ./tools/hybridse_core_test.sh

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: build/*.xml

    - name: Cleanup
      if: always()
      run: |
        git clean -dfx
        git submodule foreach 'rm -rf $displaypath'

  coverage:
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_hybridsql:latest


    steps:
    - uses: actions/checkout@v1

    - name: Fetch Submodules
      run: |
        git submodule update --init --recursive

    - name: Build and Coverage
      run: |
        # ./tools/compile_and_coverage.sh

    # - name: coverage report
    #   uses: romeovs/lcov-reporter-action@master
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     lcov-file: ./build/coverage.info

    # - name: benchmark
    #   run: |
        # cost too much time
        # bash tools/micro_bench.sh | tee micro_bench_report.txt
        # bash tools/gen_micro_bench_compare.sh

    - name: Cleanup
      if: always()
      run: |
        git clean -dfx
        git submodule foreach 'rm -rf $displaypath'
