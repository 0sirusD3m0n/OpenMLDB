name: FEDB-CICD
on: [push, pull_request]
env:
  GIT_SUBMODULE_STRATEGY: recursive
jobs:
  style_check:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT_ZW }}
    steps:
      - uses: actions/checkout@v1
#        with:
#          submodules: true
      - name: update nss
        run: yum update -y nss curl libcurl
      - name: update submodule
        run: |
          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
          git submodule init
          git submodule update
#          echo "commitIdï¼š${{ github.event.head_commit.id }}"
      - name: style_check
        run: source /root/.bashrc && bash tools/style_check.sh
  build:
    needs: [style_check]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT_ZW }}
    steps:
      - uses: actions/checkout@v1
#        with:
#          submodules: true
      - name: update nss
        run: yum update -y nss curl libcurl
      - name: update submodule
        run: |
          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
          git submodule init
          git submodule update
#      - name: tar thirdparty
#        run: |
#           tar -zxvf /depends/thirdparty.tar.gz -C /depends/
#           mv /depends/depends/thirdparty /depends/
      - name: build fesql
        run: source /root/.bashrc && bash tools/install_fesql.sh
      - name: build fedb
        run: |
          ln -sf /depends/thirdparty thirdparty
          ln -sf /depends/thirdsrc thirdsrc
          source /root/.bashrc && bash steps/simple_compile.sh
      - run: |
          pwd
          ls -al build
          ls -al build/bin
          ls -al build/bin/fedb
          ls -al build/src/sdk/
          ls -al build/sql_pysdk/dist
          ls -al build/python/dist/
      - uses: actions/upload-artifact@v1
        with:
          name: build-fedb
          path: build/bin/fedb
      - uses: actions/upload-artifact@v1
        with:
          name: build-sql_sdk_test
          path: build/bin/sql_sdk_test
      - uses: actions/upload-artifact@v1
        with:
          name: build-sql_cluster_test
          path: build/bin/sql_cluster_test
      - uses: actions/upload-artifact@v1
        with:
          name: libsql_jsdk
          path: build/src/sdk/libsql_jsdk.so
      - uses: actions/upload-artifact@v1
        with:
          name: sql_pysdk
          path: build/sql_pysdk/dist/*.whl
      - uses: actions/upload-artifact@v1
        with:
          name: python-whl
          path: build/python/dist/*.whl

#  c++_ut:
#    needs: [build]
#    runs-on: ubuntu-latest
#    container:
#      image: ghcr.io/4paradigm/centos6_gcc7_fesql:0.0.1-legacy
#      credentials:
#        username: ${{ github.actor }}
#        password: ${{ secrets.CR_PAT_ZW }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: update nss
#        run: yum update -y nss curl libcurl
#      - name: update submodule
#        run: |
#          ln -s /opt/rh/sclo-git25/root/usr/bin/git /usr/local/bin/git
#          git submodule init
#          git submodule update
#      - name: build fedb
#        run: |
#          ln -sf /depends/thirdparty thirdparty
#          ln -sf /depends/thirdsrc thirdsrc
#          source /root/.bashrc && bash steps/simple_compile.sh
#          source /root/.bashrc && sh tools/install_fesql.sh
#          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=OFF .. && make -j$(nproc) && cd ../
#          source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/ut.sh








#c++_ut:
#  stage: quick
#  script:
#    - ln -sf /depends/thirdparty thirdparty
#    - ln -sf /depends/thirdsrc thirdsrc
#    - source /root/.bashrc && sh tools/install_fesql.sh
#    - source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=OFF .. && make -j5 && cd ../
#    - source /root/.bashrc && LD_LIBRARY_PATH=/depends/thirdparty/lib:$LD_LIBRARY_PATH bash steps/ut.sh
#  artifacts:
#    reports:
#      junit:
#        - reports/*.xml
