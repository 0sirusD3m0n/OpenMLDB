name: cicd
on: [pull_request]
env:
  GIT_SUBMODULE_STRATEGY: recursive

jobs:

  cpp_ut:
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_hybridsql:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT_ZW }}
    steps:
      - uses: actions/checkout@v1
      - name: update submodule
        run: |
           /opt/rh/sclo-git212/root/usr/bin/git submodule update --init
      - name: uncompress_thirdparty
        run: |
          cd /depends && tar -zxf thirdparty.tar.gz
          mkdir zookeeper-3.4.14 && mv thirdsrc/* zookeeper-3.4.14/ && mv zookeeper-3.4.14 thirdsrc/
      - name: build_hybridse
        run: bash tools/install_hybridse.sh
      - name: run case
        run: |
          ln -sf /depends/thirdparty thirdparty
          ln -sf /depends/thirdsrc thirdsrc
          mkdir -p build
          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=OFF -DTESTING_ENABLE=ON .. && make -j$(nproc) && cd ../
          bash steps/ut.sh
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cpp_ut-report
          path: reports/*.xml
      - name: cleanup
        if: always()
        run: |
          source /etc/profile.d/enable-rh.sh
          git clean -dfx
          test -d fesql && cd fesql && git clean -dfx

  sql_sdk_test_level_0:
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_hybridsql:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT_ZW }}
    steps:
      - uses: actions/checkout@v1
      - name: update submodule
        run: |
           /opt/rh/sclo-git212/root/usr/bin/git submodule update --init
      - name: uncompress_thirdparty
        run: |
          cd /depends && tar -zxf thirdparty.tar.gz
          mkdir zookeeper-3.4.14 && mv thirdsrc/* zookeeper-3.4.14/ && mv zookeeper-3.4.14 thirdsrc/
      - name: build_hybridse
        run: bash tools/install_hybridse.sh
      - name: run case
        run: |
          ln -sf /depends/thirdparty thirdparty
          ln -sf /depends/thirdsrc thirdsrc
          mkdir -p build
          source /root/.bashrc && cd build && cmake -DSQL_PYSDK_ENABLE=OFF -DSQL_JAVASDK_ENABLE=OFF -DTESTING_ENABLE=ON .. && make -j$(nproc) sql_sdk_test && cd ../
          bash steps/fesql_c_ut.sh 0 sql_sdk_test
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: sql_sdk_test_level0-report
          path: reports/*.xml
      - name: cleanup
        if: always()
        run: |
          source /etc/profile.d/enable-rh.sh
          git clean -dfx
          test -d fesql && cd fesql && git clean -dfx

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: [cpput, sql_sdk_test_level_0]
    runs-on: self-hosted
    container:
      image: ghcr.io/4paradigm/centos6_gcc7_hybridsql:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT_ZW }}
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: cpp_ut-report
          path: reports
      - name: Download Artifacts1
        uses: actions/download-artifact@v1
        with:
          name: sql_sdk_test_level0-report
          path: reports
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: reports/*.xml
          comment_title: Test Report
          report_individual_runs: true
          check_run_annotations: all tests, skipped tests